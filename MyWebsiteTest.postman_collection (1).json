{
	"info": {
		"_postman_id": "6dd901c6-6656-4ea6-98b0-4d00c1254733",
		"name": "MyWebsiteTest",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30861950"
	},
	"item": [
		{
			"name": "RegisterNewUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('verify the first name', function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.eql(\"dania\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\": \"Pass@123\",\r\n    \"firstName\":\"{{checkfirstname}}\",\r\n    \"lastName\": \"tarawneh\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MYURL}}/api/v1/users/register",
					"host": [
						"{{MYURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "RegisterNewUser Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Response time is less than 800ms', function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(900);\r",
							"\r",
							"});\r",
							"pm.test(\"verify the first name\", function () {\r",
							"var jsonData = pm.response.json();\r",
							"const firstnamecurrentvalue = pm.environment.get(\"FIRSTNAME\")\r",
							"pm.expect(jsonData.firstName).to.eql(firstnamecurrentvalue);\r",
							"mytoken=jsonData.access_token;\r",
							"pm.environment.set(\"token\",mytoken);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const firstname=pm.variables.replaceIn('{{$randomFirstName}}')\r",
							"pm.environment.set(\"FIRSTNAME\", firstname);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\":\"{{$randomEmail}}\",\r\n    \"password\": \"Pass@123\",\r\n    \"firstName\":\"{{FIRSTNAME}}\",\r\n    \"lastName\": \"tarawneh\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MYURL}}/api/v1/users/register",
					"host": [
						"{{MYURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "FirstRecordWithToken",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify the record name is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.item).to.eql(\"this is my first record\");\r",
							"\r",
							"    const taskid= jsonData._id\r",
							"    pm.environment.set(\"mytaskid\",taskid) \r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"item\": \"this is my first record\",\r\n    \"isCompleted\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://todo.qacart.com/api/v1/tasks",
					"protocol": "https",
					"host": [
						"todo",
						"qacart",
						"com"
					],
					"path": [
						"api",
						"v1",
						"tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "MakeTheRecordAsDone",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"item\": \"this is my new record\",\r\n    \"isCompleted\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{MYURL}}/api/v1/tasks/{{mytaskid}}",
					"host": [
						"{{MYURL}}"
					],
					"path": [
						"api",
						"v1",
						"tasks",
						"{{mytaskid}}"
					]
				}
			},
			"response": []
		}
	]
}